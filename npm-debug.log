0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@4.0.5
3 info using node@v7.2.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/costa/projects/hacker school/masonite',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/costa/.npm/masonite/0.1.1/package.tgz not in flight; packing
9 verbose correctMkdir /home/costa/.npm correctMkdir not in flight; initializing
10 info lifecycle masonite@0.1.1~prepublish: masonite@0.1.1
11 silly lifecycle masonite@0.1.1~prepublish: no script for prepublish, continuing
12 info lifecycle masonite@0.1.1~prepare: masonite@0.1.1
13 silly lifecycle masonite@0.1.1~prepare: no script for prepare, continuing
14 verbose tar pack [ '/home/costa/.npm/masonite/0.1.1/package.tgz',
14 verbose tar pack   '/home/costa/projects/hacker school/masonite' ]
15 verbose tarball /home/costa/.npm/masonite/0.1.1/package.tgz
16 verbose folder /home/costa/projects/hacker school/masonite
17 verbose addLocalTarball adding from inside cache /home/costa/.npm/masonite/0.1.1/package.tgz
18 verbose correctMkdir /home/costa/.npm correctMkdir not in flight; initializing
19 silly cache afterAdd masonite@0.1.1
20 verbose afterAdd /home/costa/.npm/masonite/0.1.1/package/package.json not in flight; writing
21 verbose correctMkdir /home/costa/.npm correctMkdir not in flight; initializing
22 verbose afterAdd /home/costa/.npm/masonite/0.1.1/package/package.json written
23 silly publish { name: 'masonite',
23 silly publish   version: '0.1.1',
23 silly publish   description: 'A simple static website generator using HTML with light templating and Stylus for CSS preprocessing.',
23 silly publish   author:
23 silly publish    { name: 'Costa Michailidis',
23 silly publish      email: 'costa@innovationbound.com',
23 silly publish      url: 'http://www.github.com/wamoyo' },
23 silly publish   license: 'MIT',
23 silly publish   homepage: 'https://github.com/github.com/wamoyo/masonite#readme',
23 silly publish   bugs: { url: 'https://github.com/github.com/wamoyo/masonite/issues' },
23 silly publish   repository:
23 silly publish    { type: 'git',
23 silly publish      url: 'https://github.com/github.com/wamoyo/masonite.git' },
23 silly publish   keywords: [ 'static', 'site', 'stylus', 'html', 'generator' ],
23 silly publish   dependencies: { chokidar: '1.6.x', 'http-server': '0.9.x', stylus: '0.54.x' },
23 silly publish   main: 'npm start',
23 silly publish   scripts:
23 silly publish    { test: 'npm run wreck && npm run start',
23 silly publish      wreck: 'rm -rf site',
23 silly publish      'build-public': 'cp -R public/. site/',
23 silly publish      'build-pages': 'node bin/build-pages.js',
23 silly publish      'build-styles': 'node bin/build-styles.js',
23 silly publish      'build-blog': '',
23 silly publish      'build-events': '',
23 silly publish      'watch-public': 'node bin/watch-public.js',
23 silly publish      'watch-pages': 'node bin/watch-pages.js',
23 silly publish      'watch-styles': 'node bin/watch-styles.js',
23 silly publish      'watch-blog': '',
23 silly publish      'watch-events': '',
23 silly publish      build: 'npm run build-public && npm run build-pages && npm run build-styles',
23 silly publish      watch: 'npm run watch-public & npm run watch-pages & npm run watch-styles & npm run serve',
23 silly publish      serve: 'http-server site',
23 silly publish      start: 'npm run build && npm run serve' },
23 silly publish   readme: '# Masonite\n\n### A simple static website generator using HTML with light templating and Stylus for CSS preprocessing\n\nMasonite is a simple static site generator. It uses HTML for templating (still kind of hacked together, but HTML5 should bring some real templating features to the table), and stylus for CSS preprocessing.\n\nFeel free to hack around with it.\n\n## Install\n\nTo install run\n\n```\nnpm install masonite\n```\n\n## Run\n\nOkay, here\'s the basic idea. We\'ve got our assets organized in a variety of folder, and we\'ll be compiling our site into the `site/` folder. Here\'s how our directory looks:\n\n```bash\n.\n├── bin\n│   ├── build-pages.js\n│   ├── build-styles.js\n│   ├── watch-pages.js\n│   ├── watch-public.js\n│   └── watch-styles.js\n├── content\n│   ├── blog\n│   ├── events\n│   └── pages\n│       ├── about.html\n│       ├── bp\n│       │   ├── index.html\n│       │   └── sobre-nós.html\n│       └── index.html\n├── content-styles\n├── layouts\n│   ├── minimal.html\n│   └── standard.html\n├── layout-styles\n│   ├── library\n│   │   ├── colors.styl\n│   │   ├── open-sans.styl\n│   │   └── typography.styl\n│   ├── minimal.styl\n│   └── standard.styl\n├── LICENSE.md\n├── package.json\n├── public\n│   ├── fonts\n│   │   └── open-sans\n│   │       ├── open-sans-italic.woff\n│   │       └── open-sans.woff\n│   ├── images\n│   │   └── weird.jpg\n│   ├── javascripts\n│   │   └── hello-js-world.js\n│   └── stylesheets\n├── README.md\n└── site\n    ├── about.html\n    ├── bp\n    │   ├── index.html\n    │   └── sobre-nós.html\n    ├── fonts\n    │   └── open-sans\n    │       ├── open-sans-italic.woff\n    │       └── open-sans.woff\n    ├── images\n    │   └── weird.jpg\n    ├── index.html\n    ├── javascripts\n    │   └── hello-js-world.js\n    └── stylesheets\n        ├── minimal.css\n        └── standard.css\n```\n\nThe `content/` folder and sub-folders contain our content. The `bin/` folder contains some build and watch commands. When we build various things, we\'re assembling content and compiling it into the `site/` folder\n\nLooking at the `package.json` scripts is perhaps the most central place to understand what\'s happening. By the way, there are two dependencies. [chokidar](https://github.com/paulmillr/chokidar) for watching files, and [http-server](https://github.com/indexzero/http-server) for serving up the static files once they\'re compiled.\n\nLet\'s take a look at those scripts:\n\n```json\n{\n  "scripts": {\n    "test": "npm run wreck && npm run start",\n    "wreck": "rm -rf site",\n    "build-public": "cp -R public/. site/",\n    "build-pages": "node bin/build-pages.js",\n    "build-styles": "node bin/build-styles.js",\n    "build-blog": "",\n    "build-events": "",\n    "watch-public": "node bin/watch-public.js",\n    "watch-pages": "node bin/watch-pages.js",\n    "watch-styles": "node bin/watch-styles.js",\n    "watch-blog": "",\n    "watch-events": "",\n    "build": "npm run build-public && npm run build-pages && npm run build-styles",\n    "watch": "npm run watch-public & npm run watch-pages & npm run watch-styles & npm run serve",\n    "serve": "http-server site",\n    "start": "npm run build && npm run serve"\n  }\n}\n```\n\n1. For now `npm run test` simply wrecks the site and tries to start it up again.\n2. `npm run wreck` simply deletes the `site/` folder.\n3. `npm run build-public` copies the public `folder` (js, css, images, fonts...) into the `site/` folder.\n4. `npm run build-pages` compiles content from the `content/pages/` folder with layouts from the `layouts/` folder and drops them into the `site/` folder. It does this multiple directories deep, in case you need language folders or something like that.\n5. `npm run build-styles` runs `stylus` commands on the `layout-styles/` folder.\n6. `npm run build-blog` and `npm run build-events` are just placeholders for now, as are their respective folders in `content/`.\n7. `npm run watch-` commands essentially run the build commands as files change, get added, deleted, and as new folders are created, renamed, or removed.\n8. `npm run build` runs all the build commands.\n9. `npm run watch` does all the watch commands and serves up the site.\n10. `npm run serve` spins up an `http-server` and serves the static site in the `site/` folder.\n11. `npm run start` builds and serves the site, but doesn\'t watch.\n\nThat\'s the basic idea. It\'s still very early in its life. The code\'s messy, the dependencies are minimal and random. It\'s not very configurable. It\'s got plenty of room to grow.\n\nFeedback, comments, and such are welcome.\n\n',
23 silly publish   readmeFilename: 'README.md',
23 silly publish   gitHead: '6551351b25e662e788893b7f287dea899b547279',
23 silly publish   _id: 'masonite@0.1.1',
23 silly publish   _shasum: 'ac4ea374a6b3ec6b0831d5139b877fd4ec2eb2e5',
23 silly publish   _from: '.' }
24 info lifecycle masonite@0.1.1~prepublishOnly: masonite@0.1.1
25 silly lifecycle masonite@0.1.1~prepublishOnly: no script for prepublishOnly, continuing
26 verbose getPublishConfig undefined
27 silly mapToRegistry name masonite
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'masonite',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'masonite',
30 silly mapToRegistry   name: 'masonite',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/masonite
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /home/costa/.npm/masonite/0.1.1/package.tgz
34 verbose request uri https://registry.npmjs.org/masonite
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 11:34:54 AM
37 verbose request using bearer token for auth
38 verbose request id f708f3778fbf5ceb
39 http request PUT https://registry.npmjs.org/masonite
40 http 403 https://registry.npmjs.org/masonite
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '95',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Fri, 30 Dec 2016 16:34:55 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-jfk8130-JFK',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1483115694.705798,VS0,VE985',
41 verbose headers   vary: 'Accept-Encoding' }
42 verbose request invalidating /home/costa/.npm/registry.npmjs.org/masonite on PUT
43 error publish Failed PUT 403
44 verbose stack Error: "You cannot publish over the previously published version 0.1.1." : masonite
44 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
44 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
44 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:186:22)
44 verbose stack     at emitTwo (events.js:106:13)
44 verbose stack     at Request.emit (events.js:191:7)
44 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1081:10)
44 verbose stack     at emitOne (events.js:96:13)
44 verbose stack     at Request.emit (events.js:188:7)
44 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1001:12)
45 verbose statusCode 403
46 verbose pkgid masonite
47 verbose cwd /home/costa/projects/hacker school/masonite
48 error Linux 3.13.0-106-generic
49 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
50 error node v7.2.1
51 error npm  v4.0.5
52 error code E403
53 error "You cannot publish over the previously published version 0.1.1." : masonite
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
